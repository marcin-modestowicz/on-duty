// @flow
import {
  daysInCurrentMonth,
  ShiftsCalendar,
  AvailabilityCalendar
} from "./Calendar";
import Availability from "./Availability";
import Shift from "./Shift";
import User from "./User";

describe("daysInCurrentMonth", () => {
  let date;
  let RealDate;

  beforeAll(() => {
    RealDate = Date;
    global.Date = function DateMock(...args) {
      return args.length ? new RealDate(...args) : date;
    };
  });

  afterAll(() => {
    global.Date = RealDate;
  });

  test("should return number of days in current month", () => {
    date = new Date(2016, 1, 3);
    expect(daysInCurrentMonth()).toBe(29);

    date = new Date(2017, 1, 3);
    expect(daysInCurrentMonth()).toBe(28);

    date = new Date(2017, 2, 3);
    expect(daysInCurrentMonth()).toBe(31);

    date = new Date(2017, 3, 3);
    expect(daysInCurrentMonth()).toBe(30);
  });
});

describe("ShiftsCalendar model", () => {
  let shiftsCalendar;

  beforeAll(() => {
    shiftsCalendar = new ShiftsCalendar();
  });

  describe("on instance creation", () => {
    test("should create slots equal in number to current month days", () => {
      expect(shiftsCalendar.days.length).toBe(daysInCurrentMonth());
    });

    test("should fill slots with Shift instance", () => {
      expect(shiftsCalendar.days[0] instanceof Shift).toBeTruthy();
    });
  });

  describe("fill calendar method", () => {
    test("should choose best solution for 5 days and 4 users", () => {
      const users = [
        new User("user1", false, false, [1, 0, 0, -1, -1]),
        new User("user2", true, false, [0, -1, 1, 1, 0]),
        new User("user3", false, true, [1, 0, 0, 0, -1]),
        new User("user4", false, true, [-1, 1, 0, 1, 0])
      ];
      const calendar = [
        new Shift(),
        new Shift(),
        new Shift(),
        new Shift(),
        new Shift()
      ];

      shiftsCalendar.days = calendar;

      const shifts = shiftsCalendar.fillCalendar(users);
      const result = shiftsCalendar.days.map(({ onDuty }) =>
        onDuty.map(user => user.name).sort()
      );

      expect(result).toEqual([
        ["user1", "user3"],
        ["user2", "user4"],
        ["user1", "user3"],
        ["user2", "user4"],
        ["user1", "user3"]
      ]);
    });

    test("should choose best solution for 30 days and 30 users", () => {
      const users = [
        new User("user1", false, true, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("user2", false, true, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("user3", false, true, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("user4", false, true, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("user5", false, true, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("user6", false, true, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("user7", false, true, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("user8", false, true, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("user9", false, true, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("user10", false, true, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("user11", false, true, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("user12", false, true, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("user13", false, true, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("user14", false, true, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("user15", false, true, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("user16", false, false, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("user17", false, false, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("user18", false, false, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("user19", false, false, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("user20", false, false, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("user21", false, false, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("user22", false, false, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("user23", false, false, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("user24", false, false, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("user25", false, false, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("user26", false, false, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("user27", false, false, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("user28", false, false, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("user29", false, false, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("user30", false, false, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ])
      ];
      const calendar = [
        new Shift(),
        new Shift(),
        new Shift(),
        new Shift(),
        new Shift(),
        new Shift(),
        new Shift(),
        new Shift(),
        new Shift(),
        new Shift(),
        new Shift(),
        new Shift(),
        new Shift(),
        new Shift(),
        new Shift(),
        new Shift(),
        new Shift(),
        new Shift(),
        new Shift(),
        new Shift(),
        new Shift(),
        new Shift(),
        new Shift(),
        new Shift(),
        new Shift(),
        new Shift(),
        new Shift(),
        new Shift(),
        new Shift(),
        new Shift()
      ];

      shiftsCalendar.days = calendar;

      const shifts = shiftsCalendar.fillCalendar(users);
      const result = shiftsCalendar.days.map(({ onDuty }) =>
        onDuty.map(user => user.name).sort()
      );

      expect(result).toEqual([
        ["user2", "user3"],
        ["user20", "user30"],
        ["user14", "user26"],
        ["user23", "user24"],
        ["user25", "user26"],
        ["user11", "user8"],
        ["user19", "user27"],
        ["user14", "user25"],
        ["user17", "user23"],
        ["user28", "user29"],
        ["user6", "user7"],
        ["user13", "user24"],
        ["user12", "user22"],
        ["user20", "user21"],
        ["user16", "user18"],
        ["user1", "user9"],
        ["user21", "user28"],
        ["user27", "user29"],
        ["user16", "user30"],
        ["user17", "user26"],
        ["user4", "user5"],
        ["user1", "user12"],
        ["user10", "user22"],
        ["user18", "user19"],
        ["user16", "user30"],
        ["user10", "user15"],
        ["user27", "user28"],
        ["user24", "user25"],
        ["user23", "user29"],
        ["user21", "user22"]
      ]);
    });
  });
});

describe("AvailabilityCalendar model", () => {
  let availabilityCalendar;

  beforeAll(() => {
    availabilityCalendar = new AvailabilityCalendar();
  });

  describe("on instance creation", () => {
    test("should create slots equal in number to current month days", () => {
      expect(availabilityCalendar.days.length).toBe(daysInCurrentMonth());
    });

    test("should fill slots with Availability instance", () => {
      expect(availabilityCalendar.days[0] instanceof Availability).toBeTruthy();
    });
  });
});
