// @flow
import { getNextMonthDays } from "../utils/date";
import { ShiftsCalendar, AvailabilityCalendar } from "./Calendar";
import Availability from "./Availability";
import Shift from "./Shift";
import User from "./User";

describe("ShiftsCalendar model", () => {
  let RealDate;
  let shiftsCalendar;

  beforeAll(() => {
    RealDate = Date;
    const date = new Date(2017, 9, 1);
    global.Date = function DateMock(...args) {
      return args.length ? new RealDate(...args) : date;
    };

    shiftsCalendar = new ShiftsCalendar();
  });

  afterAll(() => {
    global.Date = RealDate;
  });

  describe("on instance creation", () => {
    test("should create slots equal in number to next month days", () => {
      expect(shiftsCalendar.days.length).toBe(getNextMonthDays().length);
    });

    test("should fill slots with Date and Shift instances", () => {
      expect(shiftsCalendar.days[0].date instanceof RealDate).toBeTruthy();
      expect(shiftsCalendar.days[0].shift instanceof Shift).toBeTruthy();
    });
  });

  describe("fill calendar method", () => {
    test("should choose best solution for 5 days and 4 users", () => {
      const users = [
        new User("a1", "user1", false, false, [1, 0, 0, -1, -1]),
        new User("a2", "user2", true, false, [0, -1, 1, 1, 0]),
        new User("a3", "user3", false, true, [1, 0, 0, 0, -1]),
        new User("a4", "user4", false, true, [-1, 1, 0, 1, 0])
      ];
      const calendar = [
        {
          date: new Date(2017, 10, 1),
          shift: new Shift()
        },
        {
          date: new Date(2017, 10, 2),
          shift: new Shift()
        },
        {
          date: new Date(2017, 10, 3),
          shift: new Shift()
        },
        {
          date: new Date(2017, 10, 4),
          shift: new Shift()
        },
        {
          date: new Date(2017, 10, 5),
          shift: new Shift()
        }
      ];

      shiftsCalendar.days = calendar;

      const shifts = shiftsCalendar.fillCalendar(users);
      const result = shiftsCalendar.days.map(({ shift }) =>
        shift.onDuty.map(user => user.name).sort()
      );

      expect(result).toEqual([
        ["user1", "user3"],
        ["user2", "user4"],
        ["user1", "user3"],
        ["user2", "user4"],
        ["user1", "user3"]
      ]);
    });

    test("should choose best solution for 30 days and 30 users", () => {
      const users = [
        new User("a1", "user1", false, true, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("a2", "user2", false, true, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("a3", "user3", false, true, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("a4", "user4", false, true, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("a5", "user5", false, true, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("a6", "user6", false, true, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("a7", "user7", false, true, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("a8", "user8", false, true, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("a9", "user9", false, true, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("a10", "user10", false, true, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("a11", "user11", false, true, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("a12", "user12", false, true, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("a13", "user13", false, true, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("a14", "user14", false, true, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("a15", "user15", false, true, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("a16", "user16", false, false, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("a17", "user17", false, false, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("a18", "user18", false, false, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("a19", "user19", false, false, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("a20", "user20", false, false, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("a21", "user21", false, false, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("a22", "user22", false, false, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("a23", "user23", false, false, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("a24", "user24", false, false, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("a25", "user25", false, false, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("a26", "user26", false, false, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("a27", "user27", false, false, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("a28", "user28", false, false, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("a29", "user29", false, false, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ]),
        new User("a30", "user30", false, false, [
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1,
          1,
          0,
          0,
          -1,
          -1
        ])
      ];
      const calendar = [
        {
          date: new Date(2017, 10, 1),
          shift: new Shift()
        },
        {
          date: new Date(2017, 10, 2),
          shift: new Shift()
        },
        {
          date: new Date(2017, 10, 3),
          shift: new Shift()
        },
        {
          date: new Date(2017, 10, 4),
          shift: new Shift()
        },
        {
          date: new Date(2017, 10, 5),
          shift: new Shift()
        },
        {
          date: new Date(2017, 10, 6),
          shift: new Shift()
        },
        {
          date: new Date(2017, 10, 7),
          shift: new Shift()
        },
        {
          date: new Date(2017, 10, 8),
          shift: new Shift()
        },
        {
          date: new Date(2017, 10, 9),
          shift: new Shift()
        },
        {
          date: new Date(2017, 10, 10),
          shift: new Shift()
        },
        {
          date: new Date(2017, 10, 11),
          shift: new Shift()
        },
        {
          date: new Date(2017, 10, 12),
          shift: new Shift()
        },
        {
          date: new Date(2017, 10, 13),
          shift: new Shift()
        },
        {
          date: new Date(2017, 10, 14),
          shift: new Shift()
        },
        {
          date: new Date(2017, 10, 15),
          shift: new Shift()
        },
        {
          date: new Date(2017, 10, 16),
          shift: new Shift()
        },
        {
          date: new Date(2017, 10, 17),
          shift: new Shift()
        },
        {
          date: new Date(2017, 10, 18),
          shift: new Shift()
        },
        {
          date: new Date(2017, 10, 19),
          shift: new Shift()
        },
        {
          date: new Date(2017, 10, 20),
          shift: new Shift()
        },
        {
          date: new Date(2017, 10, 21),
          shift: new Shift()
        },
        {
          date: new Date(2017, 10, 22),
          shift: new Shift()
        },
        {
          date: new Date(2017, 10, 23),
          shift: new Shift()
        },
        {
          date: new Date(2017, 10, 24),
          shift: new Shift()
        },
        {
          date: new Date(2017, 10, 25),
          shift: new Shift()
        },
        {
          date: new Date(2017, 10, 26),
          shift: new Shift()
        },
        {
          date: new Date(2017, 10, 27),
          shift: new Shift()
        },
        {
          date: new Date(2017, 10, 28),
          shift: new Shift()
        },
        {
          date: new Date(2017, 10, 29),
          shift: new Shift()
        },
        {
          date: new Date(2017, 10, 30),
          shift: new Shift()
        }
      ];

      shiftsCalendar.days = calendar;

      const shifts = shiftsCalendar.fillCalendar(users);
      const result = shiftsCalendar.days.map(({ shift }) =>
        shift.onDuty.map(user => user.name).sort()
      );

      expect(result).toEqual([
        ["user2", "user3"],
        ["user20", "user30"],
        ["user14", "user26"],
        ["user23", "user24"],
        ["user25", "user26"],
        ["user11", "user8"],
        ["user19", "user27"],
        ["user14", "user25"],
        ["user17", "user23"],
        ["user28", "user29"],
        ["user6", "user7"],
        ["user13", "user24"],
        ["user12", "user22"],
        ["user20", "user21"],
        ["user16", "user18"],
        ["user1", "user9"],
        ["user21", "user28"],
        ["user27", "user29"],
        ["user16", "user30"],
        ["user17", "user26"],
        ["user4", "user5"],
        ["user1", "user12"],
        ["user10", "user22"],
        ["user18", "user19"],
        ["user16", "user30"],
        ["user10", "user15"],
        ["user27", "user28"],
        ["user24", "user25"],
        ["user23", "user29"],
        ["user21", "user22"]
      ]);
    });
  });
});

describe("AvailabilityCalendar model", () => {
  let RealDate;
  let availabilityCalendar;

  beforeAll(() => {
    RealDate = Date;
    const date = new Date(2017, 9, 1);
    global.Date = function DateMock(...args) {
      return args.length ? new RealDate(...args) : date;
    };

    availabilityCalendar = new AvailabilityCalendar();
  });

  afterAll(() => {
    global.Date = RealDate;
  });

  describe("on instance creation", () => {
    test("should create slots equal in number to next month days", () => {
      expect(availabilityCalendar.days.length).toBe(getNextMonthDays().length);
    });

    test("should fill slots with Date and Availability instances", () => {
      expect(
        availabilityCalendar.days[0].date instanceof RealDate
      ).toBeTruthy();
      expect(
        availabilityCalendar.days[0].availability instanceof Availability
      ).toBeTruthy();
    });
  });
});
